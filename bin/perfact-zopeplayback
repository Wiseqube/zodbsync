#!/usr/bin/env python
#
# perfact-zopeplayback  -  Upload a subpath into the Data.fs
#

import imp  # For config loading
# for argument reading and parsing:
import argparse
# for Data.fs reading / writing:
import perfact.zodbsync

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Upload objects to the Data.fs')
    parser.add_argument('--config', '-c', type=str,
                        help='Path to config.py',
                        default='/etc/perfact/modsync/config.py')
    parser.add_argument(
        '--override', '-o', action='store_true',
        help='Override object type changes when uploading',
        default=False)
    parser.add_argument(
            '--no-recurse', action='store_true',
            help="Only upload metadata, do not remove elements or recurse",
            default=False)
    parser.add_argument(
        'path', nargs='+', type=str,
        help='Sub-Path in Data.fs to be recorded',
        )
    args = parser.parse_args()
    config_path = args.config
    paths = args.path
    override = args.override
    recurse = not args.no_recurse

    # Load configuration
    config = imp.load_source(
        'config',
        config_path)

    # Setup sync toolkit
    sync = perfact.zodbsync.ZODBSync(config=config)

    note = 'perfact-zopeplayback'
    if len(paths) == 1:
        note += ': ' + paths[0]
    txn_mgr = sync.start_transaction(note=note)

    try:
        for path in paths:
            sync.playback(path=path, override=override, recurse=recurse)
    except:
        print('Error with path ' + path)
        txn_mgr.abort()
        raise
    finally:
        txn_mgr.commit()
